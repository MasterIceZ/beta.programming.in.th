//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Account {
  id String [pk]
  userId String [not null]
  type String [not null]
  provider String [not null]
  providerAccountId String [not null]
  refresh_token String
  access_token String
  expires_at Int
  token_type String
  scope String
  id_token String
  session_state String
  oauth_token_secret String
  oauth_token String
  user User [not null]

  indexes {
    (provider, providerAccountId) [unique]
  }
}

Table Session {
  id String [pk]
  sessionToken String [unique, not null]
  userId String [not null]
  expires DateTime [not null]
  user User [not null]
}

Table User {
  id String [pk]
  username String [unique]
  name String
  email String [unique]
  emailVerified DateTime
  image String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime [not null]
  admin Boolean [not null, default: false]
  accounts Account [not null]
  sessions Session [not null]
  submissions Submission [not null]
  bookmarks Bookmark [not null]
  assessments UserOnAssessment [not null]
  ownedAssessment OwnerOnAssessment [not null]
}

Table VerificationToken {
  identifier String [not null]
  token String [unique, not null]
  expires DateTime [not null]

  indexes {
    (identifier, token) [unique]
  }
}

Table Bookmark {
  createdAt DateTime [default: `now()`, not null]
  user User [not null]
  userId String [not null]
  task Task [not null]
  taskId String [not null]

  indexes {
    (taskId, userId) [pk]
  }
}

Table Task {
  id String [pk]
  title String [not null]
  fullScore Int [not null]
  memoryLimit Int [not null]
  timeLimit Float [not null]
  path String [not null]
  solved Int [not null]
  private Boolean [not null]
  type String [not null]
  tags Tag [not null]
  bookmarks Bookmark [not null]
  submissions Submission [not null]
  taskOnAssessment TaskOnAssessment [not null]
}

Table Submission {
  id Int [pk, increment]
  taskId String [not null]
  status String [not null, default: 'In Queue']
  submittedAt DateTime [default: `now()`, not null]
  time Int [not null, default: 0]
  memory Int [not null, default: 0]
  code Bytes [not null]
  codeLength Int [not null, default: 0]
  score Int [not null, default: 0]
  groups Json [not null]
  language String [not null]
  private Boolean [not null, default: false]
  userId String
  assessmentId String
  user User
  assessment Assessment
  task Task [not null]
}

Table Assessment {
  id String [pk]
  name String [unique, not null]
  archived Boolean [not null, default: false]
  description String
  instruction String
  submission Submission [not null]
  tasks TaskOnAssessment [not null]
  users UserOnAssessment [not null]
  owners OwnerOnAssessment [not null]
  open DateTime [default: `now()`, not null]
  close DateTime [not null]
}

Table TaskOnAssessment {
  task Task [not null]
  taskId String [not null]
  assessment Assessment [not null]
  assessmentId String [not null]

  indexes {
    (taskId, assessmentId) [pk]
  }
}

Table UserOnAssessment {
  user User [not null]
  userId String [not null]
  assessment Assessment [not null]
  assessmentId String [not null]

  indexes {
    (userId, assessmentId) [pk]
  }
}

Table OwnerOnAssessment {
  user User [not null]
  userId String [not null]
  assessment Assessment [not null]
  assessmentId String [not null]

  indexes {
    (userId, assessmentId) [pk]
  }
}

Table Tag {
  id Int [pk, increment]
  name String [unique, not null]
  tasks Task [not null]
}

Table TagToTask {
  tagsId Int [ref: > Tag.id]
  tasksId String [ref: > Task.id]
}

Ref: Account.userId > User.id [delete: Cascade]

Ref: Session.userId > User.id [delete: Cascade]

Ref: Bookmark.userId > User.id

Ref: Bookmark.taskId > Task.id

Ref: Submission.userId > User.id [delete: Set Null]

Ref: Submission.assessmentId > Assessment.id [delete: Set Null]

Ref: Submission.taskId > Task.id [delete: Cascade]

Ref: TaskOnAssessment.taskId > Task.id

Ref: TaskOnAssessment.assessmentId > Assessment.id

Ref: UserOnAssessment.userId > User.id

Ref: UserOnAssessment.assessmentId > Assessment.id

Ref: OwnerOnAssessment.userId > User.id

Ref: OwnerOnAssessment.assessmentId > Assessment.id